<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="base.service.multiple.tables.fusion.dao.FusionDao">

    <resultMap id="Result" type="base.service.multiple.tables.fusion.entity.TableRelation">
        <result property="id" jdbcType="VARCHAR" column="id"/>
        <result property="dataBaseId" jdbcType="VARCHAR" column="data_base_id"/>
        <result property="fieldA" jdbcType="VARCHAR" column="fielda"/>
        <result property="relation" jdbcType="VARCHAR" column="relation"/>
        <result property="sql" jdbcType="VARCHAR" column="sql"/>
        <result property="fieldB" jdbcType="VARCHAR" column="fieldb"/>
    </resultMap>


    <parameterMap id="Base_Relation" type="base.service.multiple.tables.fusion.entity.TableRelation">
        <parameter property="id" resultMap="Result"/>
        <parameter property="dataBaseId" resultMap="Result"/>
        <parameter property="relation" resultMap="Result"/>
        <parameter property="fieldA" resultMap="Result"/>
        <parameter property="sql" resultMap="Result"/>
        <parameter property="fieldB" resultMap="Result"/>
    </parameterMap>

    <resultMap id="Result_Data_Base" type="base.service.multiple.tables.fusion.entity.DataBase">
        <result column="id" jdbcType="VARCHAR" property="id"/>
        <result column="driver_class_name" jdbcType="VARCHAR" property="driverClassName"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="data_base" jdbcType="VARCHAR" property="dataBase"/>
        <result column="data_base_type" jdbcType="INTEGER" property="dataBaseType"/>
    </resultMap>

    <select id="getDataBase" parameterType="java.lang.String" resultMap="Result_Data_Base">
        select * from data_base where id = #{id,jdbcType=VARCHAR}
    </select>

    <insert id="insertRelation" parameterType="java.util.ArrayList">
        insert into table_relation (id,data_base_id,fielda,fieldb,relation,sql)
        values
        <foreach collection="list" index="index" item="tableRelation" separator=",">
            (
            #{tableRelation.id,jdbcType=VARCHAR},
            #{tableRelation.dataBaseId,jdbcType=VARCHAR},
            #{tableRelation.fieldA,jdbcType=VARCHAR},
            #{tableRelation.fieldB,jdbcType=VARCHAR},
            #{tableRelation.relation,jdbcType=VARCHAR},
            #{tableRelation.sql,jdbcType=VARCHAR}
            )
        </foreach>

    </insert>
</mapper>